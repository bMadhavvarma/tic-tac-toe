{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaya Naga Varma B\\\\Desktop\\\\Madhav\\\\2024\\\\react\\\\Tic-Tac-Toe\\\\my-app\\\\src\\\\Startgame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './Startgame.css';\nimport ResultPopup from './ResultPopup'; // Import ResultPopup component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Startgame = ({\n  selectedPlayer,\n  onQuit\n}) => {\n  _s();\n  const [board, setBoard] = useState(() => {\n    const savedBoard = localStorage.getItem('board');\n    return savedBoard ? JSON.parse(savedBoard) : Array(9).fill(null);\n  });\n  const [isXTurn, setIsXTurn] = useState(() => {\n    const savedIsXTurn = localStorage.getItem('isXTurn');\n    return savedIsXTurn ? JSON.parse(savedIsXTurn) : selectedPlayer === 'X';\n  });\n  const [winner, setWinner] = useState(null);\n  const [ties, setTies] = useState(() => parseInt(localStorage.getItem('ties')) || 0);\n  const [xWins, setXWins] = useState(() => parseInt(localStorage.getItem('xWins')) || 0);\n  const [oWins, setOWins] = useState(() => parseInt(localStorage.getItem('oWins')) || 0);\n  const [showResult, setShowResult] = useState(false);\n  const [resultText, setResultText] = useState('');\n  useEffect(() => {\n    localStorage.setItem('board', JSON.stringify(board));\n    localStorage.setItem('isXTurn', JSON.stringify(isXTurn));\n    localStorage.setItem('page', 'startgame');\n  }, [board, isXTurn]);\n\n  // Function to check for winner\n  const checkWinner = useCallback(newBoard => {\n    const winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let combination of winningCombinations) {\n      const [a, b, c] = combination;\n      if (newBoard[a] && newBoard[a] === newBoard[b] && newBoard[a] === newBoard[c]) {\n        setWinner(newBoard[a]);\n        return;\n      }\n    }\n    if (newBoard.every(cell => cell !== null)) {\n      setTies(prevTies => {\n        const newTies = prevTies + 1;\n        localStorage.setItem('ties', newTies);\n        return newTies;\n      });\n      setWinner('Tie');\n    }\n  }, []);\n\n  // Use effect to handle game state changes\n  useEffect(() => {\n    if (winner) {\n      if (winner === 'X') {\n        setXWins(prevXWins => {\n          const newXWins = prevXWins + 1;\n          localStorage.setItem('xWins', newXWins);\n          return newXWins;\n        });\n      } else if (winner === 'O') {\n        setOWins(prevOWins => {\n          const newOWins = prevOWins + 1;\n          localStorage.setItem('oWins', newOWins);\n          return newOWins;\n        });\n      }\n      setResultText(winner === 'Tie' ? 'It\\'s a Tie!' : `${winner} Wins!`);\n      setShowResult(true);\n      return;\n    }\n    if (!isXTurn && !winner) {\n      const emptyIndices = board.map((val, index) => val === null ? index : null).filter(val => val !== null);\n      if (emptyIndices.length > 0) {\n        setTimeout(() => {\n          const randomIndex = emptyIndices[Math.floor(Math.random() * emptyIndices.length)];\n          const newBoard = board.slice();\n          newBoard[randomIndex] = selectedPlayer === 'X' ? 'O' : 'X';\n          setBoard(newBoard);\n          setIsXTurn(true);\n          checkWinner(newBoard);\n        }, 750);\n      }\n    }\n  }, [isXTurn, board, winner, selectedPlayer, checkWinner]);\n\n  // Handle click on a cell\n  const handleClick = index => {\n    if (board[index] || winner) return;\n    const newBoard = board.slice();\n    newBoard[index] = selectedPlayer;\n    setBoard(newBoard);\n    setIsXTurn(false);\n    checkWinner(newBoard);\n  };\n\n  // Handle reset\n  const handleReset = () => {\n    setBoard(Array(9).fill(null));\n    setIsXTurn(selectedPlayer === 'X');\n    setWinner(null);\n    setShowResult(false);\n  };\n\n  // Handle play again\n  const handlePlayAgain = () => {\n    handleReset();\n  };\n\n  // Handle quit\n  const handleQuit = () => {\n    localStorage.removeItem('xWins');\n    localStorage.removeItem('oWins');\n    localStorage.removeItem('ties');\n    localStorage.removeItem('board');\n    localStorage.removeItem('isXTurn');\n    localStorage.removeItem('page');\n    handleReset();\n    onQuit();\n  };\n\n  // Determine the current player's turn message\n  const currentPlayerTurn = isXTurn ? 'X' : 'O';\n  const humanPlayerTurn = selectedPlayer === 'X' ? currentPlayerTurn : currentPlayerTurn === 'X' ? 'O' : 'X';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topheading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"X \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"O\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${humanPlayerTurn}'s TURN`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReset,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"\",\n            className: \"bi bi-repeat\",\n            viewBox: \"0 0 16 16\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11 5.466V4H5a4 4 0 0 0-3.584 5.777.5.5 0 1 1-.896.446A5 5 0 0 1 5 3h6V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192m3.81.086a.5.5 0 0 1 .67.225A5 5 0 0 1 11 13H5v1.466a.25.25 0 0 1-.41.192l-2.36-1.966a.25.25 0 0 1 0-.384l2.36-1.966a.25.25 0 0 1 .41.192V12h6a4 4 0 0 0 3.585-5.777.5.5 0 0 1 .225-.67Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boxes ${showResult ? 'disabled' : ''}`,\n        children: board.map((cell, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `box ${cell === 'X' ? 'x' : cell === 'O' ? 'o' : ''}`,\n          onClick: () => handleClick(index),\n          children: cell\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p1\",\n          children: [selectedPlayer, \"(YOU)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 50\n          }, this), selectedPlayer === 'X' ? xWins : oWins]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p2\",\n          children: [\"TIES\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), ties]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p3\",\n          children: [selectedPlayer === 'X' ? 'O(CPU)' : 'X(CPU)', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 75\n          }, this), selectedPlayer === 'X' ? oWins : xWins]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), showResult && /*#__PURE__*/_jsxDEV(ResultPopup, {\n      result: resultText,\n      onPlayAgain: handlePlayAgain,\n      onQuit: handleQuit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      children: \"jjfvjfgvjhgjhgjh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Startgame, \"dFrHKKZJLg68/LXv+C7TrspfG6I=\");\n_c = Startgame;\nexport default Startgame;\nvar _c;\n$RefreshReg$(_c, \"Startgame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ResultPopup","jsxDEV","_jsxDEV","Startgame","selectedPlayer","onQuit","_s","board","setBoard","savedBoard","localStorage","getItem","JSON","parse","Array","fill","isXTurn","setIsXTurn","savedIsXTurn","winner","setWinner","ties","setTies","parseInt","xWins","setXWins","oWins","setOWins","showResult","setShowResult","resultText","setResultText","setItem","stringify","checkWinner","newBoard","winningCombinations","combination","a","b","c","every","cell","prevTies","newTies","prevXWins","newXWins","prevOWins","newOWins","emptyIndices","map","val","index","filter","length","setTimeout","randomIndex","Math","floor","random","slice","handleClick","handleReset","handlePlayAgain","handleQuit","removeItem","currentPlayerTurn","humanPlayerTurn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","width","height","viewBox","d","result","onPlayAgain","_c","$RefreshReg$"],"sources":["C:/Users/Jaya Naga Varma B/Desktop/Madhav/2024/react/Tic-Tac-Toe/my-app/src/Startgame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Startgame.css';\r\nimport ResultPopup from './ResultPopup'; // Import ResultPopup component\r\n\r\nconst Startgame = ({ selectedPlayer, onQuit }) => {\r\n  const [board, setBoard] = useState(() => {\r\n    const savedBoard = localStorage.getItem('board');\r\n    return savedBoard ? JSON.parse(savedBoard) : Array(9).fill(null);\r\n  });\r\n  const [isXTurn, setIsXTurn] = useState(() => {\r\n    const savedIsXTurn = localStorage.getItem('isXTurn');\r\n    return savedIsXTurn ? JSON.parse(savedIsXTurn) : selectedPlayer === 'X';\r\n  });\r\n  const [winner, setWinner] = useState(null);\r\n  const [ties, setTies] = useState(() => parseInt(localStorage.getItem('ties')) || 0);\r\n  const [xWins, setXWins] = useState(() => parseInt(localStorage.getItem('xWins')) || 0);\r\n  const [oWins, setOWins] = useState(() => parseInt(localStorage.getItem('oWins')) || 0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [resultText, setResultText] = useState('');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('board', JSON.stringify(board));\r\n    localStorage.setItem('isXTurn', JSON.stringify(isXTurn));\r\n    localStorage.setItem('page', 'startgame');\r\n  }, [board, isXTurn]);\r\n\r\n  // Function to check for winner\r\n  const checkWinner = useCallback((newBoard) => {\r\n    const winningCombinations = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n\r\n    for (let combination of winningCombinations) {\r\n      const [a, b, c] = combination;\r\n      if (newBoard[a] && newBoard[a] === newBoard[b] && newBoard[a] === newBoard[c]) {\r\n        setWinner(newBoard[a]);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (newBoard.every(cell => cell !== null)) {\r\n      setTies(prevTies => {\r\n        const newTies = prevTies + 1;\r\n        localStorage.setItem('ties', newTies);\r\n        return newTies;\r\n      });\r\n      setWinner('Tie');\r\n    }\r\n  }, []);\r\n\r\n  // Use effect to handle game state changes\r\n  useEffect(() => {\r\n    if (winner) {\r\n      if (winner === 'X') {\r\n        setXWins(prevXWins => {\r\n          const newXWins = prevXWins + 1;\r\n          localStorage.setItem('xWins', newXWins);\r\n          return newXWins;\r\n        });\r\n      } else if (winner === 'O') {\r\n        setOWins(prevOWins => {\r\n          const newOWins = prevOWins + 1;\r\n          localStorage.setItem('oWins', newOWins);\r\n          return newOWins;\r\n        });\r\n      }\r\n      setResultText(winner === 'Tie' ? 'It\\'s a Tie!' : `${winner} Wins!`);\r\n      setShowResult(true);\r\n      return;\r\n    }\r\n\r\n    if (!isXTurn && !winner) {\r\n      const emptyIndices = board.map((val, index) => val === null ? index : null).filter(val => val !== null);\r\n      if (emptyIndices.length > 0) {\r\n        setTimeout(() => {\r\n          const randomIndex = emptyIndices[Math.floor(Math.random() * emptyIndices.length)];\r\n          const newBoard = board.slice();\r\n          newBoard[randomIndex] = selectedPlayer === 'X' ? 'O' : 'X';\r\n          setBoard(newBoard);\r\n          setIsXTurn(true);\r\n          checkWinner(newBoard);\r\n        }, 750);\r\n      }\r\n    }\r\n  }, [isXTurn, board, winner, selectedPlayer, checkWinner]);\r\n\r\n  // Handle click on a cell\r\n  const handleClick = (index) => {\r\n    if (board[index] || winner) return;\r\n    const newBoard = board.slice();\r\n    newBoard[index] = selectedPlayer;\r\n    setBoard(newBoard);\r\n    setIsXTurn(false);\r\n    checkWinner(newBoard);\r\n  };\r\n\r\n  // Handle reset\r\n  const handleReset = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setIsXTurn(selectedPlayer === 'X');\r\n    setWinner(null);\r\n    setShowResult(false);\r\n  };\r\n\r\n  // Handle play again\r\n  const handlePlayAgain = () => {\r\n    handleReset();\r\n  };\r\n\r\n  // Handle quit\r\n  const handleQuit = () => {\r\n    localStorage.removeItem('xWins');\r\n    localStorage.removeItem('oWins');\r\n    localStorage.removeItem('ties');\r\n    localStorage.removeItem('board');\r\n    localStorage.removeItem('isXTurn');\r\n    localStorage.removeItem('page');\r\n    handleReset();\r\n    onQuit();\r\n  };\r\n\r\n  // Determine the current player's turn message\r\n  const currentPlayerTurn = isXTurn ? 'X' : 'O';\r\n  const humanPlayerTurn = selectedPlayer === 'X' ? currentPlayerTurn : (currentPlayerTurn === 'X' ? 'O' : 'X');\r\n\r\n  return (\r\n    <div className='game'>\r\n      <div className='game-container'>\r\n        <div className='topheading'>\r\n          <h1>X <span>O</span></h1>\r\n          <p>{`${humanPlayerTurn}'s TURN`}</p>\r\n          <button onClick={handleReset}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"\" className=\"bi bi-repeat\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M11 5.466V4H5a4 4 0 0 0-3.584 5.777.5.5 0 1 1-.896.446A5 5 0 0 1 5 3h6V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192m3.81.086a.5.5 0 0 1 .67.225A5 5 0 0 1 11 13H5v1.466a.25.25 0 0 1-.41.192l-2.36-1.966a.25.25 0 0 1 0-.384l2.36-1.966a.25.25 0 0 1 .41.192V12h6a4 4 0 0 0 3.585-5.777.5.5 0 0 1 .225-.67Z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className={`boxes ${showResult ? 'disabled' : ''}`}>\r\n          {board.map((cell, index) => (\r\n            <button\r\n              key={index}\r\n              className={`box ${cell === 'X' ? 'x' : cell === 'O' ? 'o' : ''}`}\r\n              onClick={() => handleClick(index)}\r\n            >\r\n              {cell}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className='bottom'>\r\n          <p className='p1'>{selectedPlayer}(YOU)<br />{selectedPlayer === 'X' ? xWins : oWins}</p>\r\n          <p className='p2'>TIES<br />{ties}</p>\r\n          <p className='p3'>{selectedPlayer === 'X' ? 'O(CPU)' : 'X(CPU)'}<br />{selectedPlayer === 'X' ? oWins : xWins}</p>\r\n        </div>\r\n      </div>\r\n      {showResult && (\r\n        <ResultPopup\r\n          result={resultText}\r\n          onPlayAgain={handlePlayAgain}\r\n          onQuit={handleQuit}\r\n        />\r\n      )}\r\n      <button className='btn btn-primary'>jjfvjfgvjhgjhgjh</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Startgame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}